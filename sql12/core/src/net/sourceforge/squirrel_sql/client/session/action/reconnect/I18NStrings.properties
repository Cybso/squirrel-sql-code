
ReconnectAction.confirmReconnect=Close the current connection to the database and open a new one?

ReconnectAction.reconnect.title=Reconnect to database

ReconnectAction.yes=Yes
ReconnectAction.yes.mnemonic=y
ReconnectAction.no=No
ReconnectAction.no.mnemonic=n
ReconnectAction.cancel=Cancel


ReconnectAction.url=JDBC URL
ReconnectAction.user=User
ReconnectAction.password=Password

ReconnectAction.connect.data.change.use=Change connect data for reconnect.\nThis can be used e.g. for Docker (or similar container) driven tests, when the container was restarted with changed port.


ReconnectAction.skip.opening.new.connection=Skip opening new connection

ReconnectAction.skip.opening.new.connection.info=<html>Choose this option to close the current connection and stay disconnect from the database.<br>\
  Repeat reconnect when you are ready to open a new connection.<br>\
  This option may be useful for example when your connection disturbs external activities on the database.


#Session.reconn.skiped.on.user.request=User requested to skip opening a new connection.\n\
#  This Session is now in the same invalid state as when reconnect failed.\n\
#  Reconnect again to fix this state.