RevertablePopupPanel.revert=Revert change
RevertablePopupPanel.copy=Copy former version

ChangeTrackTypeChooser.manual=Rebase change tracking manually
ChangeTrackTypeChooser.file=Rebase change tracking on file save and load
ChangeTrackTypeChooser.git=Rebase change tracking on commit to GIT repository

#NOTE: End with <br> and don't use </html> ending to enable to append an accelerator.
ChangeTrackTypeChooser.manual.tooltip=<html><b>Manually rebase change tracking:</b>\
  <br>Change track base is reset to the current editor contents when and only when this button is clicked.\
  <br><br><b>On change tracking:</b><br>Change tracking shows the changes to the editor contents at the light yellow side bars (gutters) of the editor.\
  <br>The left gutter when clicked displays details of a change and allows to revert it.\
  <br>The right gutter allows to navigate (scroll) to any change.\
  <br>The base against which changes are displayed depends on which button is selected.\
  <br>Please note the left gutter's right mouse menu.<br>


#NOTE: End with <br> and don't use </html> ending to enable to append an accelerator.
ChangeTrackTypeChooser.file.tooltip=<html><b>Change tracking is rebased by file changes:</b>\
  <br>Change track base is reset to the current file contents whenever a file is loaded or saved.\
  <br><br><b>On change tracking:</b><br>Change tracking shows the changes to the editor contents at the light yellow side bars (gutters) of the editor.\
  <br>The left gutter when clicked displays details of a change and allows to revert it.\
  <br>The right gutter allows to navigate (scroll) to any change.\
  <br>The base against which changes are displayed depends on which button is selected.\
  <br>Please note the left gutter's right mouse menu.<br>

#NOTE: End with <br> and don't use </html> ending to enable to append an accelerator.
ChangeTrackTypeChooser.git.tooltip=<html><html><b>Change tracking is rebased by GIT commit:</b>\
  <br>Click this button to commit the current file to GIT.\
  <br>If the editor contents are not saved or the edited file is not under GIT control,\
  <br>SQuirreL will offer to guide you through the process of creating a file and/or initializing GIT.\
  <br>If a file is under GIT control change tracking is based on the current/HEAD GIT repository version.\
  <br>The file's revision history can be opened by the the left gutter's right mouse menu.\
  <br>For more information on GIT go to <href a="https://git-scm.com">https://git-scm.com</href>\
  <br><br><b>On change tracking:</b><br>Change tracking shows the changes to the editor contents at the light yellow side bars (gutters) of the editor.\
  <br>The left gutter when clicked displays details of a change and allows to revert it.\
  <br>The right gutter allows to navigate (scroll) to any change.\
  <br>The base against which changes are displayed depends on which button is selected.\
  <br>Please note the left gutter's right mouse menu.<br>


SelectGitRepoRootDirController.title=Create GIT repository
SelectGitRepoRootDirController.ok=Ok
SelectGitRepoRootDirController.cancel=Cancel

SelectGitRepoRootDirController.description=File\n{0}\nwas not saved inside a GIT repository. If you wish to create a GIT repository please choose the repository root directory.

GitHandler.commitMsg=Committed file "{0}" to branch "{1}" of GIT repository "{2}" with committer name "{3}".
GitHandler.commitLog=Committed file "{0}" to branch "{1}" of GIT repository "{2}" with committer name "{3}". The commit''s ID is: "{4}"
GitHandler.unmodified=File "{0}" was not modified. Nothing to commit to GIT.

ChangeTrackPrefsPanel.title=Change tracking

ChangeTrackPrefsPanel.chk.enableChangeTracking=Enable change tracking

ChangeTrackPrefsPanel.description=Change tracking shows the changes to the editor contents at the light yellow side bars (gutters) of the editor.\
  The left gutter when clicked displays details of a change and allows to revert it.\
  The right gutter allows to navigate (scroll) to any change.\
  The base against which changes are displayed depends on which change track toolbar button is selected.

ChangeTrackPrefsPanel.chk.edit.git.message.manually=Enter GIT commit message. If not checked SQuirreL uses the following default message:

ChangeTrackPrefsPanel.change.popup.style=Choose how changes are marked in right gutter pop ups:

ChangeTrackPrefsPanel.deletions.mark=Deleted character's styles:

ChangeTrackPrefsPanel.git=GIT
ChangeTrackPrefsPanel.left.gutter.popup.style=Left gutter popup style

ChangeTrackPrefsPanel.delete.bold.style.toggle.tooltip=Toggle bold
ChangeTrackPrefsPanel.delete.italics.style.toggle.tooltip=Toggle italics
ChangeTrackPrefsPanel.delete.foreground.color.tooltip=Choose foreground color


ChangeTrackPrefsPanel.insert.begin.position.background=Insert begin background color:
ChangeTrackPrefsPanel.insert.end.position.background=Insert end background color:


ChangeTrackPrefsPanel.example.change.track.base=Example change track base:
ChangeTrackPrefsPanel.example.editor.text=Example editor text:
ChangeTrackPrefsPanel.example.popup=Example popup:

ChangeTrackPrefsPanel.choose.color=Choose color

ChangeTrackPrefsPanel.note.file.name.replace=Note: @file will be replaced by the path of the committed file relative to the GIT repository root.
ChangeTrackPrefsPanel.note.file.name.replace.tooltip=<html>SQuirreL commits only single files.<br>That is why it makes sense for the file to be mentioned in the commit message.

GitCommitMessageDialog.message.history.tooltip=Show message history

GitCommitMessageDialog.title=GIT commit file: {0}

GitCommitMessageDialog.ok=Ok
GitCommitMessageDialog.cancel=Cancel

GitCommitMessageController.description=Enter message for GIT commit of file\n{0}\nto branch "{1}" of repository\n{2}

GitCommitMessageController.empty.title=Commit message required
GitCommitMessageController.empty.message= Please enter a commit message.

ChangeTracker.open.preferences=Open change tracking preferences

ChangeTracker.open.git.revisions=Show GIT revisions for file: {0}

ChangeTracker.revert.all=Revert all

GitHandler.git.control.internal.saved.session.files.title=GIT control Saved Sessions?
GitHandler.git.control.internal.saved.session.files.msg=Do you wish to GIT-control internally Saved Session files?
